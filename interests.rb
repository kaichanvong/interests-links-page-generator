require "../apps/hypertext_from_my_markdown/hypertext_from_my_markdown"
require "../helpers/kaichanvong/HTML_elements"

file_of_interests = open('./index.html', 'a')
a_to_z = ('A'..'Z').to_a
interests_by_alphabet = interests_by_a_to_z = Hash.new([]); a_to_z.map { |alpha| interests_by_a_to_z[alpha] = [] }
all_interests = ["Adult Swim", "Alan Wake", "Altuzarra", "Bank of England", "Based on your searches", "Ben Foster", "Black Lives Matter", "Breakfast", "Burritos", "Cat People", "Catan", "Celebrity fan and gossip", "CFL Football", "Cheese", "Chelsea Peretti", "Chris Pine", "Christian Bale", "Cody Rhodes", "Cryptotokens", "Digital assets & cryptocurrency", "Dolph Ziggler", "Donuts", "Dustin Rhodes", "Dyson", "E3", "EA Sports Madden NFL", "Eddie Nketiah", "Edge", "Entertainment awards", "Famous productions", "Folklore", "Food Network", "Galatasaray S.K.", "H. Jon Benjamin", "Hamilton The Musical", "Herbs and spices", "Home & family", "Huening Kai", "Hungary", "Ice cream", "Ice Cube", "Jamie Foxx", "Johnny Depp", "Johnny Depp/Amber Heard Trial", "Juventus FC", "Knives Out 2", "Lifehacks", "Little Monsters", "Liv Morgan", "Lloyds", "London Fashion Week", "Lorde", "Los Angeles food scene", "Maddie Ziegler", "Massachusetts", "MOA", "New York Yankees", "Park Chan wook", "Pentagon", "Persuasion", "Pippa Middleton", "Political events", "Pop divas", "Potato recipes", "Pro Evolution Soccer", "Reshmin Chowdhury", "Rodney Mullen", "Russia travel", "Russo-Ukrainian conflict", "Salad", "Scott Matthew Parker", "Singapore Airlines", "Solar Power", "Soulja Boy", "Soups", "Sports cards", "Stephen Curry", "Steve Bruce", "Summer Olympics", "Sunday Brunch", "Tacos", "Tech Insider", "Techmeme", "The Cuphead Show!", "The Great British Sewing Bee", "The Killers", "Thomas Tuchel", "Tommaso Ciampa", "Tony Hawk's Pro Skater", "Virgin Galactic", "Wales national news", "Watchmen", "Wendy Choo", "Wingstop", "Word of Honor", "Yahoo!", "Yodobashi Camera (ヨドバシカメラ)","Adobe", "Alberto Test", "Amazon Prime Day 2021", "Drinks", "Dunkin' Donuts", "Evil Geniuses", "Figure skating", "Hybrid vehicles", "Level design", "Microsoft", "Mobile development", "My Brother, My Brother, and Me", "Productivity", "Robbie Williams", "Sam Fox", "Sherwood", "SK Gaming", "The Great British Bake Off", "The Quarry", "Typography", "WhatsApp", "Yoga","Dragon Ball","American football", "Animated films", "Animation", "Anime", "Apple", "Arts & culture", "Barclays Premier League Football", "Barclays Premier League Soccer", "BBC", "BBC News", "Chess", "Documentary films", "Drink Experience", "England - Soccer", "Facebook", "Fashion", "Front-End Programming", "Gaming news", "Google", "Hearthstone", "Intel Extreme Masters (IEM)", "Marvel Universe", "National Health Service", "Nintendo", "PC gaming", "Retro gaming", "Star Wars", "StarCraft", "Sylvan Esso", "Tabletop gaming", "Technology", "Twitch", "Twitter"] ## =>
interests = all_interests.map { |interest_keyword|  interests_by_alphabet[interest_keyword[0]] << interest_keyword }
list_of_interests = String.new
interests_by_alphabet.map do |key, k_interests| 
	list_of_interests += HyperTextFromMarkdownParser.new(key.to_s, {'html_element' => HTML_HEADER2, 'attr_id' => key.to_s}).results  	
	list_of_interests += (k_interests.map { |interest| interest = interest.split("(")[0];interest = "[#{interest}](https://twitter.com/search?q=#{interest.gsub(' ','%20')} 'external')"; HyperTextFromMarkdownParser.new(interest, HTML_LIST_ITEM).results }).join
end
puts list_of_interests
html_a_z = a_to_z.map { |alpha_item| HyperTextFromMarkdownParser.new("[#{alpha_item}](##{alpha_item})", HTML_LIST_ITEM).results }.join
file_of_interests << HyperTextFromMarkdownParser.new(html_a_z, HTML_ORDERED_LIST).results
file_of_interests << HyperTextFromMarkdownParser.new( list_of_interests, HTML_ORDERED_LIST ).results
file_of_interests.close
